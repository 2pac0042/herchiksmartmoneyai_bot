import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

TOKEN = "–¢–í–û–ô_–¢–û–ö–ï–ù_–°–Æ–î–ê"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_menu = ReplyKeyboardMarkup(
    [
        ["üìä –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä", "üéì –ö—É—Ä—Å—ã"],
        ["üí≥ –û–ø–ª–∞—Ç–∞", "üåê –Ø–∑—ã–∫"]
    ],
    resize_keyboard=True
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Herchik Smart Money AI üíº\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "üìä –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä":
        await update.message.reply_text("üîç –î–æ—Å—Ç—É–ø –∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.")
    elif text == "üéì –ö—É—Ä—Å—ã":
        await update.message.reply_text("üéì –°–ø–∏—Å–æ–∫ –ø–ª–∞—Ç–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ.")
    elif text == "üí≥ –û–ø–ª–∞—Ç–∞":
        await update.message.reply_text("üí≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\n1. Click\n2. Payme\n3. USDT\n\n–û–ø–ª–∞—Ç–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º.")
    elif text == "üåê –Ø–∑—ã–∫":
        await update.message.reply_text("üåê –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    else:
        await update.message.reply_text("‚ùì –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é.")

if name == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()
