from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import logging
import os

API_TOKEN = os.getenv("BOT_TOKEN")

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üíé –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø"), KeyboardButton("üìö –ö—É—Ä—Å—ã"))
    await message.reply("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Herchik Smart Money AI!", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text == "üíé –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø")
async def buy_access(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ: \n1 –º–µ—Å—è—Ü ‚Äî 99,000 —Å—É–º\n3 –º–µ—Å—è—Ü–∞ ‚Äî 199,000 —Å—É–º\n–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ ‚Äî 499,000 —Å—É–º\n\nüí≥ –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø–ª–∞—Ç—ã:\n‚Ä¢ Payme\n‚Ä¢ Click\n‚Ä¢ USDT (TRC20)")

@dp.message_handler(lambda message: message.text == "üìö –ö—É—Ä—Å—ã")
async def send_courses(message: types.Message):
    await message.answer("üéì –ö—É—Ä—Å—ã –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏!")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
