import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if not BOT_TOKEN:
    print("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
    exit()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
menu = ReplyKeyboardMarkup(resize_keyboard=True)
menu.add(KeyboardButton("üíé –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø"))
menu.add(KeyboardButton("üìö –ö—É—Ä—Å—ã"))

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=['start'])
async def start_handler(message: types.Message):
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Herchik Smart Money AI!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø"
@dp.message_handler(lambda message: message.text == "üíé –ö—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø")
async def buy_access(message: types.Message):
    await message.answer(
        "üíº –¢–∞—Ä–∏—Ñ—ã:\n"
        "‚Ä¢ 1 –º–µ—Å—è—Ü ‚Äî 99,000 —Å—É–º\n"
        "‚Ä¢ 3 –º–µ—Å—è—Ü–∞ ‚Äî 199,000 —Å—É–º\n"
        "‚Ä¢ Lifetime ‚Äî 499,000 —Å—É–º\n\n"
        "üí≥ –û–ø–ª–∞—Ç–∞: Click, Payme, USDT (TRC20)\n"
        "–î–ª—è –æ–ø–ª–∞—Ç—ã ‚Äî –Ω–∞–ø–∏—à–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: @forex0042"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö—É—Ä—Å—ã"
@dp.message_handler(lambda message: message.text == "üìö –ö—É—Ä—Å—ã")
async def courses_handler(message: types.Message):
    await message.answer("üéì –ö—É—Ä—Å—ã –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
